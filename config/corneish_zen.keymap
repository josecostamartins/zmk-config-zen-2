#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_6col_layout;
        // zmk,physical-layout = &foostan_corne_5col_layout;
    };
};

/ {
    macros {
        btchold: bt_clear_hold {
            label = "CLEAR_BT_CONNECTION";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_CLR>;
        };
    };
};

/ {
  behaviors {
    bksp: custom_backspace {
      compatible = "zmk,behavior-mod-morph";
      label = "CUSTOM_BACKSPACE";
      #binding-cells = <0>;
      bindings = <&kp RA(BSPC)>, <&kp LG(BSPC)>;
      mods = <(MOD_LGUI)>;
    };
//     ht_btclear: hold_tap_bt_clear {
//         compatible = "zmk,behavior-hold-tap";
//         label = "ht_btclear";
//         #binding-cells = <2>;
//         flavor = "hold-preferred";
//         tapping-term-ms = <200>;
//         bindings = <&btchold>, <&none>;
//     };
  };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
//                               --------------------------------------------------------------
//                              |  TAB | Q | W | E | R | T |       | Y | U | I | O | P | BKSP  |
//                              |  ESC | A | S | D | F | G |       | H | J | K | L | ; | ENTER |
//                              | SHFT | Z | X | C | V | B |       | N | M | , | . | / | SHFT  |
//                              ----------------------------       ----------------------------
//                                            |GUI|LALT|RSE|       |LWR|SPACE|CTRL|
//                                            --------------       ----------------
                        bindings = <
   &kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T       &kp Y   &kp U     &kp I      &kp O     &kp P      &bksp
   &kp ESC    &kp A  &kp S  &kp D     &kp F      &kp G       &kp H   &kp J     &kp K      &kp L     &kp SEMI   &kp RET
   &kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B       &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH   &kp RSHIFT
                            &kp LGUI  &kp LALT   &mo 2       &mo 1   &kp SPACE &kp RCTRL 
                        >;
                };
                lower_layer {
                        label = "NUMBER";
//                               -------------------------------         ----------------------------------
//                              |   `   | 1 | 2 | 3 | 4 |   5   |       |  6  |  7  | 8   |  9  | 0 |  DEL |
//                              |  ESC  |   |   |   |   |       |       | LFT | DWN | UP  | RGT |   |   '  |
//                              |  SHFT |   |   |   |   | LCTRL |       |     |     |     |     |   | SHFT |
//                               -------------------------------         ----------------------------------
//                                          | GUI |     | MEDIA |       | ENT |     | ALT | 
//                                           -------------------         -----------------
                        bindings = <
   &kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5      &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp DEL
   &trans  &trans  &trans  &trans   &trans   &trans         &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp SQT
   &trans  &trans  &trans  &trans   &trans   &kp LCTRL      &trans    &trans    &trans    &trans     &trans  &trans
                           &trans   &trans   &trans         &trans    &trans    &trans
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
//                              -----------------------------          ----------------------------
//                              |    ~   | ! | @ | # | $ | % |        | ^ | & | * | ( |  )  | BKSP |
//                              |   ESC  |   |   |   |   |   |        | - | = | [ | ] |  \  |  "   |
//                              |  SHFT  |   |   |   |   |   |        | _ | + | { | } | "|" | SHFT |
//                              -----------------------------          ----------------------------
//                                               |GUI|   |SPC|        |MEDIA|   |ALT|
//                                                ------------         -----------

                         bindings = <
     &kp TILDE   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR &kp RPAR &kp BSPC
     &trans   &trans   &trans &trans   &trans   &trans          &kp MINUS  &kp EQUAL &kp LBKT         &kp RBKT &kp BSLH &kp DQT
     &trans   &trans   &trans &trans   &trans   &trans          &kp UNDER  &kp PLUS  &kp LBRC         &kp RBRC &kp PIPE &trans
                                    &trans   &trans   &trans          &trans     &trans    &trans
                        >;
                };

                config_layer {
                        label = "MEDIA";
//                              ----------------------------------------          ----------------------------------------------
//                              |  BTCLR  | BT1 | BT2 | BT3 | BT4 | BT5 |        |    |   |    |   | BT/USB toggle | BT_CLEAR |
//                              |  CTRL   |     |     |     |     |     |        | üîï | üîâ | üîä | ‚èØ |  |   |
//                              |  SHFT   |     |     |     |     |     |        | ‚èÆ | ‚è≠ |    |   |  |   |
//                              ----------------------------------------          -----------------------
//                                                    |GUI  |     | SPC |        |   |   |   |
//                                                     -----------------          -----------
                        bindings = <
   &trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans          &trans          &trans          &trans       &out OUT_TOG     &bt BT_CLR
   &trans        &trans        &trans        &trans        &trans        &trans           &kp C_VOL_DN    &kp C_VOL_UP    &kp C_MUTE      &kp C_PP     &trans           &trans
   &trans        &trans        &trans        &trans        &trans        &trans           &kp C_NEXT      &kp C_PREV      &trans          &trans       &trans           &trans
                                             &trans        &trans        &trans           &trans          &trans          &trans
                        >; 
                };
        };
    };
